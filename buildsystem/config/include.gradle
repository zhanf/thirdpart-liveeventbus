apply plugin: 'com.android.library'

def debug = false
try {
    debug = Boolean.parseBoolean(IS_ENV)
} catch (ignored) {
}

def databinding = false
try {
    databinding = Boolean.parseBoolean(DATA_BINDING)
} catch (ignored) {
}

def aroute = false
try {
    aroute = Boolean.parseBoolean(AROUTE)
} catch (ignored) {
}

println("debug=" + debug + " databinding=" + databinding + " aroute=" + aroute)
android {

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        tasks.lint.enabled = !debug
    }
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode = rootProject.ext.android.versionCode
        versionName = rootProject.ext.android.versionName

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        if (aroute) {
            javaCompileOptions {
                annotationProcessorOptions {
                    arguments = [AROUTER_MODULE_NAME: project.getName()]
                }
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
//        incremental = DEBUG //开启增量编译
        sourceCompatibility = rootProject.ext.java.sourceCompatibility
        targetCompatibility = rootProject.ext.java.targetCompatibility
    }
    dataBinding {
        enabled databinding
    }
}

dependencies {

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    annotationProcessor rootProject.ext.dependencies["androidx_roomCompiler"]

    if (aroute) {
        compileOnly(rootProject.ext.shihuo["library_route"]) {
            exclude group: 'com.alibaba'
        }
        compileOnly(rootProject.ext.dependencies["arouter_api"]) {
            exclude group: 'com.alibaba', module: 'fastjson'
        }
        annotationProcessor rootProject.ext.dependencies.arouter_compiler
    }
    implementation rootProject.ext.dependencies["androidx_material"]
    implementation rootProject.ext.dependencies["androidx_appcompat"]
    implementation rootProject.ext.dependencies["androidx_appcompat_resources"]
}
